<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/12/15
 * Time: 13:30
 */

namespace app\admin\controller;


use app\common\controller\Core;
use app\common\model\AdminAuthAll;
use think\Db;
use auth\Auth;
use think\Config;
use think\Request;
use think\Response;
use think\Session;
use think\Loader;

class Admin extends Core
{
    /**
     * @var 后台菜单
     */
    protected $admin_menu;
    protected $ruleList = [];
    /**
     * @var 模型名称
     */
    protected $model_name ;
    protected $model_save = 'save';
    protected $model_stat = 'setStatus';
    protected $_from_action;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $request = Request::instance();
        $model = $request->module();
        $controller = $request->controller();
        $action = $request->action();
        $where = $model.'/'.$controller.'/'.$action;
        $admin = new AdminAuthAll();
        $admin_menu = new \app\common\model\AdminMenu();

        $name = $admin_menu->where('name',$where)->find();
        $pname = $admin_menu->where('id',$name['pid'])->value('title');
        $but_top = $admin->authButton(1,$name['id']);
        $but_list = $admin->authButton(2,$name['id']);

        if (!empty($but_top)) {
            foreach ($but_top as $value) {
                $val['menu_title'] = $value['title'];
                $val['from_url'] = url($value['name'], ['but_type' => $value['but_type'], 'but_site' => $value['but_site']]);
                $val['ico'] = $value['but_ico'];
                $_from_button[] = $val;
            }
            Tpldemo::temp()->_from_button = $_from_button;
        }

        if (!empty($but_list)){
            foreach ($but_list as $value){
                $value['url'] = url($value['name'],['but_type'=>$value['but_type'],'but_site'=>$value['but_site']]);
                $_from_list_but[] = $value;
            }
            Tpldemo::temp()->_table_button = $_from_list_but;
        }

        Tpldemo::temp()->_template_title = $name['title'];
        Tpldemo::temp()->_template_nav = $pname;

        $this->_from_action = url($this->model_save);
        $this->model_name = 'common/'.$controller;
        $this->admin_menu = $admin->_menu();
        $this->assign('auth_admin_menu',$this->admin_menu);
    }

    public function dataListTo($data)
    {
        $list = [];
        foreach ($data as $val){
            $list[] = $val->toArray();
        }
        return $list;
    }


    /**
     * 表单提交 的公共的方法
     */
    /**
     * @param $id
     * @param $data
     */
    public function tabSave($id,$data,$add = 'add',$edit="edit")
    {
        $model = Loader::model($this->model_name);
        $vali = Loader::validate($this->model_name);
        if (empty($id)){ //新增
            $con = '新增';
            if (!$vali->scene($add)->check($data)){
                return $this->result('2',config('status.no'),$vali->getError());
            }
        }else{ //修改
            $con = '修改';
            if (!$vali->scene($edit)->check($data)){
                return $this->result('1',config('status.no'),$vali->getError());
            }
        }
        $res = $model->tabAdd($data,$id);
        if (!empty($res)){
            return $this->result($res,config('status.yes'),$con.'成功');
        }else{
            return $this->result($res,config('status.no'),$con.'失败');
        }
    }

    /**
     * @param Request $request 资源
     * @param $model 模型名
     * @param bool $script 参数
     * @return mixed
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     */
    public function setStatus(Request $request,$model, $script = false)
    {
        $id = $request->post('id');
        $status = $request->post('status');
        $field = $request->post('field')?$request->post('field'):'status';
        switch ($status){
            case 'del':
                $info = Db::name($model)->where('id',$id)->delete();
                if ($info){
                    return $this->result($info,config('status.yes'),'success');
                }else{
                    return $this->result('',config('status.no'),'false');
                }
                break;
            case '1':
                $info = Db::name($model)->where('id','eq',$id)->setField($field,0);
                if ($info){
                    return $this->result($info,config('status.yes'),'success');
                }else{
                    return $this->result('',config('status.no'),'false');
                }
                break;
            case '0':
                $info = Db::name($model)->where('id','eq',$id)->setField($field,1);
                if ($info){
                    return $this->result($info,config('status.yes'),'success');
                }else{
                    return $this->result('',config('status.no'),'false');
                }
                break;
                //审核通过
            case 'auditrue':
                $info = Db::name($model)->where('id','eq',$id)->setField($field,3);
                if ($info){
                    return $this->result($info,config('status.yes'),'success');
                }else{
                    return $this->result('',config('status.no'),'false');
                }
                break;
                //审核不通过
            case 'auditfalse':
                $info = Db::name($model)->where('id','eq',$id)->setField($field,4);
                if ($info){
                    return $this->result($info,config('status.yes'),'success');
                }else{
                    return $this->result('',config('status.no'),'false');
                }
                break;
            default:
                return $this->result('',config('status.no'),'参数错误');
                break;
        }
    }
}