<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/5/16
 * Time: 11:19
 */

namespace app\rider\controller;


use app\common\controller\Core;
use think\Db;
//use auth\Auth;
//use think\Config;
use think\Request;
//use think\Response;
//use think\Session;
use think\Loader;

class Admin extends Core
{
    public static $model; //admin  obj

    /**
     * @var 后台左侧菜单
     */
    protected $admin_menu;
    /**
     * @var 列表顶部菜单
     */
    protected $menu_top_list;
    protected $ruleList = [];
    /**
     * @var 模型名称
     */
    protected $model_name ;
    protected $model_save = 'save';
    protected $model_stat = 'setStatus';
    protected $_from_action;
    protected $_form_button;

    public function _initialize()
    {
        $this->success('成功',url('index/index'));
        parent::_initialize(); // TODO: Change the autogenerated stub
        $request = Request::instance();
        $model = $request->module();
        $controller = $request->controller();
        $action = $request->action();
        $where = $model.'/'.$controller.'/'.$action;
        $admin = Loader::model('AdminAuthAll');
        $admin_menu = Loader::model('common/AdminMenu');

        $name = $admin_menu->where('name',$where.'$menu=3')->find();
        if (empty($name) && $controller != 'Index'){
            $name = $admin_menu->where('name',$where)->find();
        }
        $pname = $admin_menu->where('id',$name['pid'])->value('title');
        $but_top = $admin->authButton(1,$name['id']);
        $but_list = $admin->authButton(2,$name['id']);

        if (!empty($but_top)) {
            foreach ($but_top as $value) {
                $value['url'] = url($value['name'], $value['urlval']);
                $_from_button[] = $value;
            }
            Tpldemo::temp()->_from_button = $_from_button;
        }
        if (!empty($but_list)){
            foreach ($but_list as $value){
                $value['url'] = url($value['name'],$value['urlval']);
                $_from_list_but[] = $value;
            }

            $this->_form_button = Tpldemo::temp()->_table_button = $_from_list_but;
        }

        Tpldemo::temp()->_template_title = $name['title'];
        Tpldemo::temp()->_template_nav = $pname;

        $this->_from_action = url($this->model_save);
        $this->model_name = $controller;
        $this->admin_menu = $admin->_menu();
        $this->menu_top_list = $admin->_menuTop($this->title);
        $this->assign('menu_top_list',$this->menu_top_list);
        $this->assign('auth_admin_menu',$this->admin_menu);
    }

    public function formList(Request $request,$model_name)
    {
        $model = Loader::model($model_name);
        //分页
        $where = $model->laypageWhere($request);
        $data = $model->whereCopy()->selectList($where->index_where['field'],$where->index_where['value'],[$where->index_curr,$where->index_size]);
        //
        $_from_data = $model->_from_data($data);
        //
        $_table_title = $model->_table_title;

        /**
         * 搜索参数
         */

        //下拉菜单参数
        $select = $model->fromTypeSelectValues(1,$request);
        $select_name = $model->fromTypeSelectValues(2,$request);
        if (!empty($select)) {
            $this->assign('select_name', $select_name);
            $this->assign('type_select', $select);
        }
        //搜索参数
        $search_time = $model->search_time?true:null;
        $search_field_true = $model->search_field?true:null;
        if (empty($select) && empty($search_field_true) && empty($search_time)){
            $this->assign('search_true',null);
        }else{
            $this->assign('search_true',true);
        }
        $this->assign('search_field_true',$search_field_true);
        $this->assign('search_url',$where->search_url);
        $this->assign('search_name',$where->search_name);
        //时间搜索
        $this->assign('search_time',$search_time);
        $this->assign('start_time',$where->search_start_time);
        $this->assign('end_time',$where->search_end_time);

        /**
         * 分页参数
         */
        //分页上传的地址
        $this->assign('index_url',$_SERVER['PATH_INFO']);
        //分页的总数
        $this->assign('index_count',$where->index_count);
        //分页的页码
        $this->assign('index_curr',$where->index_curr);
        //分页的每页数量
        $this->assign('index_size',$where->index_size);
        /**
         * 分页参数
         */
        return Tpldemo::temp()->tableData($_from_data)
            ->tableTitle($_table_title)->template($model->tpl)->templateView();
    }

    public function dataListTo($data)
    {
        $list = [];
        foreach ($data as $val){
            $list[] = $val->toArray();
        }
        return $list;
    }

    public function _empty($name,Request $request)
    {
        if ($name == 'index'){
            return $this->formList($request,$request->controller());
        }
        return 'is null';
    }

    /**
     * 表单提交 的公共的方法
     * @param $id 表单id
     * @param $data 表单数据
     * @param string $add 添加验证场景标识
     * @param string $edit 修改验证场景标识
     * @param bool $true 是否开启验证
     */
    public function tabSave($id,$data,$add = 'add',$edit="edit",$true=true)
    {
        $model = Loader::model($this->model_name);
        if ($true) {
            $vali = Loader::validate($this->model_name);
            if (empty($id)) { //新增
                $con = '新增';
                if (!$vali->scene($add)->check($data)) {
                    return $this->result('2', config('code.no'), $vali->getError());
                }
            } else { //修改
                $con = '修改';
                if (!$vali->scene($edit)->check($data)) {
                    return $this->result('1', config('code.no'), $vali->getError());
                }
            }
        }
        $res = $model->tabAdd($data,$id);
        if (!empty($res)){
            return $this->result($res,config('code.yes'),$con.'成功');
        }else{
            return $this->result($res,config('code.no'),$con.'失败');
        }
    }

    /**
     * @param Request $request 资源
     * @param $model 模型名/表名 不包含前缀
     * @param bool $script 参数
     * @return mixed
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     */
    public function setStatus(Request $request,$model = '', $script = false)
    {
        if (empty($model)){
            $model = $request->controller();
        }
        $id = $request->post('id/a');
        $status = $request->post('status');
        $field = $request->post('field')?$request->post('field'):'status';
        switch ($status){
            case 'del':
                $info = Db::name($model)->delete($id);
                if ($info){
                    return $this->result($info,config('code.yes'),'成功删除'.$info.'条记录');
                }else{
                    return $this->result('',config('code.no'),'删除失败');
                }
                break;
            case config('status.open'):
                $info = Db::name($model)->where('id','IN',$id)->setField($field,config('status.close'));
                if ($info){
                    return $this->result($info,config('code.yes'),'操作成功'.$info.'条记录');
                }else{
                    return $this->result('',config('code.no'),'操作失败');
                }
                break;
            case config('status.close'):
                $info = Db::name($model)->where('id','IN',$id)->setField($field,config('status.open'));
                if ($info){
                    return $this->result($info,config('code.yes'),'操作成功'.$info.'条记录');
                }else{
                    return $this->result('',config('code.no'),'操作失败');
                }
                break;
            //审核通过
            case 'auditrue':
                $info = Db::name($model)->where('id','IN',$id)->setField($field,config('status.true'));
                if ($info){
                    return $this->result($info,config('code.yes'),'审核通过'.$info.'条记录');
                }else{
                    return $this->result('',config('code.no'),'操作失败');
                }
                break;
            //审核不通过
            case 'auditfalse':
                $info = Db::name($model)->where('id','IN',$id)->setField($field,config('status.false'));
                if ($info){
                    return $this->result($info,config('code.yes'),'审核失败'.$info.'条记录');
                }else{
                    return $this->result('',config('code.no'),'操作失败');
                }
                break;
            default:
                return $this->result('',config('code.no'),'非法参数');
                break;
        }
    }

}