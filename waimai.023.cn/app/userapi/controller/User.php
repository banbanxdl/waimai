<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/6/15
 * Time: 14:52
 */

namespace app\userapi\controller;


use app\userapi\model\UserPayLog;
use think\Db;
use think\Loader;
use think\Request;
use think\Session;

class User extends Api
{

    public function _initialize()
    {
        $this->model = new \app\userapi\model\User();
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取会员信息
     * @param Request $request
     * @return mixed
     */
    public function userInfo(Request $request)
    {
        $id = $request->get('id');
        if (empty($id)){
            return message('','参数错误',1);
        }
        try{
            $list = $this->model->info($id);
        }catch (\Exception $e){
            return message('',$e->getMessage(),5);
        }
        if (empty($list)){
            return message('','会员信息不存在',4);
        }else{
            return message($list,'success',2);
        }
    }

    /**
     * 修改密码
     * @param Request $request
     * @return mixed
     */
    public function userSavePwd(Request $request)
    {
        $vali = new \app\userapi\validate\User();
        $model = new \app\userapi\model\User();
        if ($request->isGet()){   // 我的信息修改密码
            $data['id'] = $request->get('id');     //
            $data['opwd'] = $request->get('opwd'); //旧密码
            $data['pwd'] = $request->get('pwd');   //新密码
            $data['pwdx'] = $request->get('pwdx'); //确认密码
            if (!$vali->scene('GetPwd')->check($data)){
                return message('',$vali->getError(),1);
            }
            try{
                $num = $model->where('id',$data['id'])->setField('password',encrmd($data['pwd']));
            }catch (\Exception $e){
                return message('',$e->getMessage(),5);
            }
            if (empty($num)){
                return message('','修改失败',3);
            }else{
                return message('','修改成功',2);
            }
        }elseif ($request->isPost()) { //手机验证码
            $data['phone'] = $request->post('phone');
            $data['code'] = $request->post('code');
            $data['pwd'] = $request->post('pwd');
            if (!$vali->scene('PostPwd')->check($data)){
                return message('',$vali->getError(),1);
            }
            try{
                $num = $model->where('phone',$data['phone'])->setField('password',encrmd($data['pwd']));
            }catch (\Exception $e){
                return message('',$e->getMessage(),5);
            }
            if (empty($num)){
                return message('','修改失败',3);
            }else{
                return message('','修改成功',2);
            }
        }
    }


    /**
     * 用户注册 返回新增ID
     * @param Request $request
     * @return mixed
     */
    public function userAdd(Request $request)
    {
        $vali = Loader::validate('User');
        $model = Loader::model('User');
        if ($request->isPost()){
            $data['phone'] = $request->post('phone');
            $data['code'] = $request->post('code');
            $data['pwd'] = $request->post('pwd');
            if (!$vali->scene('PostAdd')->check($data)){
                return message('',$vali->getError(),1);
            }
            try{
                $id = $model->insertGetId([
                    'phone' =>$data['phone'],
                    'password' =>$data['pwdx'],
                    'register_time' =>time(),
                ]);
            }catch (\Exception $e){
                return message('',$e->getMessage(),5);
            }
            if (empty($id)){
                return message('','注册失败',3);
            }else{
                return message($id,'注册成功',2);
            }
        }
    }


    /**
     * 支付密码验证
     * @param Request $request
     * @return mixed
     */
    public function userPayAuth(Request $request)
    {
        $vali = new \app\userapi\validate\User();
        if ($request->isPost()){
            $data = $request->post();
            if (!$vali->scene('AuthPay')->check($data)){
                return message('',$vali->getError(),1);
            }
            return message('','验证通过',2);
        }
    }

    /**
     * 我的消费记录
     * @param Request $request
     * @return mixed
     */
    public function userPayLog(Request $request)
    {
        if ($request->isGet()){
            $id = $request->get('id/d');
            $model = new UserPayLog();
            try{
                $list = collection($model->field('user_id',true)->where('user_id',$id)->select())->toArray();
            }catch (\Exception $e){
                return message('',$e->getMessage(),5);
            }
            if (empty($list)){
                return message('','您还没有消费记录',3);
            }else{
                return message($list,'成功',2);
            }
        }
    }

    /**
     * 消费记录详情
     * @param Request $request
     * @return mixed
     */
    public function userPayLogCon(Request $request)
    {
        if ($request->isGet()){
            $id = $request->get('id/d');
            $model = new UserPayLog();
            try{
                $list = $model->field('user_id',true)->where('id',$id)->find();
            }catch (\Exception $e){
                return message('',$e->getMessage(),5);
            }
            if (empty($list)){
                return message('','您还没有消费记录',3);
            }else{
                return message($list,'获取成功',2);
            }
        }
    }

    //小程序
    public function userInfoSmall(Request $request)
    {
        if ($request->isPost()){
            $vali = new \app\userapi\validate\User();
            $data['wx_oppenid'] = $request->post('wx_oppenid');
            $data['nickname'] = $request->post('nickname');
            $data['head_img'] = $request->post('imgurl');
            $data['phone'] = $request->post('phone');
            if (!$vali->scene('oppenidInfo')->check($data)){
                return message('',$vali->getError(),1);
            }
        }
    }



}